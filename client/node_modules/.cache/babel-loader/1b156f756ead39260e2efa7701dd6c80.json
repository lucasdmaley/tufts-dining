{"ast":null,"code":"// state.js\n// Create atoms to store source of truth for application\nimport { atom, selector } from 'recoil';\nconst customizationState = atom({\n  key: 'customizationState',\n  default: {\n    downhill: false,\n    uphill: false,\n    mealplan: false,\n    jumbocash: false,\n    favorites: false,\n    rare_finds: false,\n    vegetarian: false,\n    vegan: false,\n    gluten_free: false,\n    milk_free: false,\n    nut_free: false,\n    allergen_free: false\n  }\n});\nconst getBitpackedCustomizationState = selector({\n  key: 'getBitpackedCustomizationState',\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const customization = get(customizationState);\n    let id = \"\";\n    customization.downhill ? id += '1' : id += '0'; //able to make this\n\n    customization.uphill ? id += '1' : id += '0'; //more modular?\n\n    customization.mealplan ? id += '1' : id += '0';\n    customization.jumbocash ? id += '1' : id += '0';\n    customization.favorites ? id += '1' : id += '0';\n    return 0;\n  }\n});","map":{"version":3,"sources":["/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/state.js"],"names":["atom","selector","customizationState","key","default","downhill","uphill","mealplan","jumbocash","favorites","rare_finds","vegetarian","vegan","gluten_free","milk_free","nut_free","allergen_free","getBitpackedCustomizationState","get","customization","id"],"mappings":"AAAA;AACA;AAEA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AAEA,MAAMC,kBAAkB,GAAGF,IAAI,CAAC;AAC5BG,EAAAA,GAAG,EAAE,oBADuB;AAE5BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,QAAQ,EAAE,KAHL;AAILC,IAAAA,SAAS,EAAE,KAJN;AAKLC,IAAAA,SAAS,EAAE,KALN;AAMLC,IAAAA,UAAU,EAAE,KANP;AAOLC,IAAAA,UAAU,EAAE,KAPP;AAQLC,IAAAA,KAAK,EAAE,KARF;AASLC,IAAAA,WAAW,EAAE,KATR;AAULC,IAAAA,SAAS,EAAE,KAVN;AAWLC,IAAAA,QAAQ,EAAE,KAXL;AAYLC,IAAAA,aAAa,EAAE;AAZV;AAFmB,CAAD,CAA/B;AAkBA,MAAMC,8BAA8B,GAAGhB,QAAQ,CAAC;AAC5CE,EAAAA,GAAG,EAAE,gCADuC;AAE5Ce,EAAAA,GAAG,EAAE,QAAW;AAAA,QAAV;AAACA,MAAAA;AAAD,KAAU;AACZ,UAAMC,aAAa,GAAGD,GAAG,CAAChB,kBAAD,CAAzB;AACA,QAAIkB,EAAE,GAAG,EAAT;AACAD,IAAAA,aAAa,CAACd,QAAd,GAAyBe,EAAE,IAAI,GAA/B,GAAqCA,EAAE,IAAI,GAA3C,CAHY,CAGoC;;AAChDD,IAAAA,aAAa,CAACb,MAAd,GAAuBc,EAAE,IAAI,GAA7B,GAAmCA,EAAE,IAAI,GAAzC,CAJY,CAIkC;;AAC9CD,IAAAA,aAAa,CAACZ,QAAd,GAAyBa,EAAE,IAAI,GAA/B,GAAqCA,EAAE,IAAI,GAA3C;AACAD,IAAAA,aAAa,CAACX,SAAd,GAA0BY,EAAE,IAAI,GAAhC,GAAsCA,EAAE,IAAI,GAA5C;AACAD,IAAAA,aAAa,CAACV,SAAd,GAA0BW,EAAE,IAAI,GAAhC,GAAsCA,EAAE,IAAI,GAA5C;AACA,WAAO,CAAP;AACH;AAX2C,CAAD,CAA/C","sourcesContent":["// state.js\n// Create atoms to store source of truth for application\n\nimport { atom, selector } from 'recoil';\n\nconst customizationState = atom({\n    key: 'customizationState',\n    default: {\n        downhill: false,\n        uphill: false,\n        mealplan: false,\n        jumbocash: false,\n        favorites: false,\n        rare_finds: false,\n        vegetarian: false,\n        vegan: false,\n        gluten_free: false,\n        milk_free: false,\n        nut_free: false,\n        allergen_free: false\n    }\n});\n\nconst getBitpackedCustomizationState = selector({\n    key: 'getBitpackedCustomizationState',\n    get: ({get}) => {\n        const customization = get(customizationState);\n        let id = \"\";\n        customization.downhill ? id += '1' : id += '0'; //able to make this\n        customization.uphill ? id += '1' : id += '0'; //more modular?\n        customization.mealplan ? id += '1' : id += '0';\n        customization.jumbocash ? id += '1' : id += '0';\n        customization.favorites ? id += '1' : id += '0';\n        return 0;\n    }\n});"]},"metadata":{},"sourceType":"module"}