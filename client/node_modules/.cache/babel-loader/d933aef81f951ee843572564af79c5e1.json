{"ast":null,"code":"// state.js\n// Create atoms to store source of truth for application\nimport { atom, selector } from 'recoil';\nexport const appState = atom({\n  key: 'appState',\n  default: {\n    menu: true //,\n    // navUpdated: false\n\n  }\n});\nexport const getAppState = selector({\n  key: 'getAppState',\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    return get(appState);\n  }\n});\nexport const keyState = atom({\n  key: 'keyState',\n  default: {\n    key: false\n  }\n});\nexport const getKeyState = selector({\n  key: 'getKeyState',\n  get: _ref2 => {\n    let {\n      get\n    } = _ref2;\n    return get(keyState);\n  }\n});\nexport const customizationState = atom({\n  key: 'customizationState',\n  default: {\n    meal_time: 'Breakfast',\n    downhill: false,\n    uphill: false,\n    mealplan: true,\n    jumbocash: false,\n    favorites: false,\n    rare_finds: false,\n    vegetarian: false,\n    vegan: false,\n    gluten_free: false,\n    milk_free: false,\n    nut_free: false,\n    allergen_free: false\n  }\n});\nexport const getCustomizationState = selector({\n  key: 'getCustomizationState',\n  get: _ref3 => {\n    let {\n      get\n    } = _ref3;\n    return get(customizationState);\n  }\n});\nexport const getBitpackedCustomizationState = selector({\n  key: 'getBitpackedCustomizationState',\n  get: _ref4 => {\n    let {\n      get\n    } = _ref4;\n    const customization = get(customizationState);\n    let id = \"\";\n    customization.downhill ? id += '1' : id += '0'; //able to make this\n\n    customization.uphill ? id += '1' : id += '0'; //more modular?\n\n    customization.mealplan ? id += '1' : id += '0';\n    customization.jumbocash ? id += '1' : id += '0';\n    customization.favorites ? id += '1' : id += '0';\n    customization.rare_finds ? id += '1' : id += '0';\n    customization.vegetarian ? id += '1' : id += '0';\n    customization.vegan ? id += '1' : id += '0';\n    customization.gluten_free ? id += '1' : id += '0';\n    customization.milk_free ? id += '1' : id += '0';\n    customization.nut_free ? id += '1' : id += '0';\n    customization.allergen_free ? id += '1' : id += '0';\n    console.log(\"created id: \" + id);\n    return id;\n  }\n});\nexport const getTimePeriod = selector({\n  key: 'getTimePeriod',\n  get: _ref5 => {\n    let {\n      get\n    } = _ref5;\n    return get(customizationState).meal_time;\n  }\n});","map":{"version":3,"sources":["/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/state.js"],"names":["atom","selector","appState","key","default","menu","getAppState","get","keyState","getKeyState","customizationState","meal_time","downhill","uphill","mealplan","jumbocash","favorites","rare_finds","vegetarian","vegan","gluten_free","milk_free","nut_free","allergen_free","getCustomizationState","getBitpackedCustomizationState","customization","id","console","log","getTimePeriod"],"mappings":"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","sourcesContent":["// state.js\n// Create atoms to store source of truth for application\n\nimport { atom, selector } from 'recoil';\n\nexport const appState = atom({\n    key: 'appState',\n    default: {\n        menu: true //,\n        // navUpdated: false\n    }\n});\n\nexport const getAppState = selector({\n    key: 'getAppState',\n    get: ({get}) => {\n        return get(appState);\n    }\n})\n\nexport const keyState = atom({\n    key: 'keyState',\n    default: {\n        key: false\n    }\n})\n\nexport const getKeyState = selector({\n    key: 'getKeyState',\n    get: ({get}) => {\n        return get(keyState);\n    }\n})\n\nexport const customizationState = atom({\n    key: 'customizationState',\n    default: {\n        meal_time: 'Breakfast',\n        downhill: false,\n        uphill: false,\n        mealplan: true,\n        jumbocash: false,\n        favorites: false,\n        rare_finds: false,\n        vegetarian: false,\n        vegan: false,\n        gluten_free: false,\n        milk_free: false,\n        nut_free: false,\n        allergen_free: false\n    }\n});\n\nexport const getCustomizationState = selector({\n    key: 'getCustomizationState',\n    get: ({get}) => {\n        return get(customizationState);\n    }\n});\n\nexport const getBitpackedCustomizationState = selector({\n    key: 'getBitpackedCustomizationState',\n    get: ({get}) => {\n        const customization = get(customizationState);\n        let id = \"\";\n        customization.downhill ? id += '1' : id += '0'; //able to make this\n        customization.uphill ? id += '1' : id += '0'; //more modular?\n        customization.mealplan ? id += '1' : id += '0';\n        customization.jumbocash ? id += '1' : id += '0';\n        customization.favorites ? id += '1' : id += '0';\n        customization.rare_finds ? id += '1' : id += '0';\n        customization.vegetarian ? id += '1' : id += '0';\n        customization.vegan ? id += '1' : id += '0';\n        customization.gluten_free ? id += '1' : id += '0';\n        customization.milk_free ? id += '1' : id += '0';\n        customization.nut_free ? id += '1' : id += '0';\n        customization.allergen_free ? id += '1' : id += '0';\n        console.log(\"created id: \" + id);\n        return id;\n    }\n});\n\nexport const getTimePeriod = selector({\n    key: 'getTimePeriod',\n    get: ({get}) => {\n        return get(customizationState).meal_time;\n    }\n});"]},"metadata":{},"sourceType":"module"}