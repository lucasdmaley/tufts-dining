[{"/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/index.js":"1","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/App.js":"2","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/Menu.js":"3","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/TopNavBar.js":"4","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/state.js":"5","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/Search.js":"6","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/BottomNavBar.js":"7","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/Key.js":"8","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/KeyItem.js":"9"},{"size":233,"mtime":1642561501649,"results":"10","hashOfConfig":"11"},{"size":1222,"mtime":1642650963028,"results":"12","hashOfConfig":"11"},{"size":1721,"mtime":1642551630642,"results":"13","hashOfConfig":"11"},{"size":1637,"mtime":1642559574462,"results":"14","hashOfConfig":"11"},{"size":2280,"mtime":1642688232272,"results":"15","hashOfConfig":"11"},{"size":6192,"mtime":1642610635335,"results":"16","hashOfConfig":"11"},{"size":1590,"mtime":1642649051735,"results":"17","hashOfConfig":"11"},{"size":1220,"mtime":1642688534942,"results":"18","hashOfConfig":"11"},{"size":1197,"mtime":1642689435553,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"fdj5x1",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/index.js",[],["43","44"],"/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/App.js",[],"/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/Menu.js",["45","46"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  //RecoilRoot,\n  //atom,\n  //selector,\n  //useRecoilState,\n  useRecoilValue,\n} from 'recoil'\nimport { customizationState, getBitpackedCustomizationState, \n         getTimePeriod } from \"../state.js\";\n\nimport \"./Menu.css\";\n\nconst DiningHallItems = (props) => {\n    const dishes = props.dishes;\n    const meal_time = useRecoilValue(getTimePeriod);\n\n    return (\n        <div className=\"DiningHall\">\n            <h3>{props.diningHall}</h3>\n            {dishes.filter(dish => dish.dining_hall === props.diningHall && dish.meal_time === meal_time).map(hallDishes => (\n                <p key={hallDishes.id} className=\"dish\">{hallDishes.name}</p>\n            ))}\n        </div>\n    );\n}\n\nconst Menu = () => {\n    \n    const [ dishes, setDishes ] = useState([]);\n    const id = useRecoilValue(getBitpackedCustomizationState);\n    \n    const getDishes = async () => {\n        try {\n            const response = await fetch(\"http://localhost:5000/dishes/\" + id);\n            const jsonData = await response.json();\n            \n            setDishes(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n    \n    useEffect(() => { //every time component loads\n        getDishes();\n    }, []);\n    \n    return (\n        <Fragment>\n            <div className=\"Menu\">\n                <DiningHallItems diningHall=\"Mugar\" dishes={dishes} />\n                <DiningHallItems diningHall=\"Dewick\" dishes={dishes} />\n                <DiningHallItems diningHall=\"Carm\" dishes={dishes} />\n                <DiningHallItems diningHall=\"Kindlevan\" dishes={dishes} />\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Menu;","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/TopNavBar.js",["47"],"//TopNavBar\n//Modified from MUI example\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { appState, customizationState, getCustomizationState } from \"../state\"\n\nimport \"./TopNavBar.css\";\n\nexport default function TopNavBar() {\n  const [value, setValue] = React.useState(0);\n  const setAppState = useSetRecoilState(appState);\n  const setCustomizationState = useSetRecoilState(customizationState);\n  const oldCustomizationState = useRecoilValue(getCustomizationState);\n  const tabs = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n\n  const handleChange = (event, newValue) => {\n      setAppState({ menu: true });\n      let newCustomizationState = {};\n      newCustomizationState.meal_time = tabs[newValue];\n      for (const [key, value] of Object.entries(oldCustomizationState)) {\n          if (key != \"meal_time\")\n            newCustomizationState[key] = value;\n      }\n      setCustomizationState(newCustomizationState);\n      setValue(newValue);\n  };\n\n  return (\n    <Box className=\"TopNavBar\">\n      <Tabs value={value} onChange={handleChange} centered sx={{'& .MuiTabs-flexContainer': {justifyContent: 'space-evenly', }, }}>\n        <Tab label=\"Breakfast\" sx={{height: '8vh', fontSize: '15px', color: 'rgba(0, 0, 0, 1)'}}/>\n        <Tab label=\"Lunch\" sx={{height: '8vh', fontSize: '15px', color: 'rgba(0, 0, 0, 1)'}}/>\n        <Tab label=\"Dinner\" sx={{height: '8vh', fontSize: '15px', color: 'rgba(0, 0, 0, 1)'}}/>\n      </Tabs>\n      <hr className=\"BottomBorder\"/>\n    </Box>\n  );\n}","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/state.js",[],"/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/Search.js",["48","49","50","51","52","53","54"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { customizationState, getCustomizationState } from \"../state.js\";\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\n\nimport \"./Search.css\";\n\nconst Search = () => {\n    const setCustomization = useSetRecoilState(customizationState);\n    const oldCustomizationState = useRecoilValue(getCustomizationState); //local customization state\n    \n    const handleDefaultChange = (event) => {\n        let newCustomizationState = {};\n        let defaultKey = event.target.value.replace('_only', '');\n        newCustomizationState[defaultKey] = true;\n        for (const [key, value] of Object.entries(oldCustomizationState)) {\n            if (key != defaultKey)\n                newCustomizationState[key] = false;\n        }\n        setCustomization(newCustomizationState);\n    };\n    \n    const handleCustomChange = (event) => {\n        let newCustomizationState = {};\n        newCustomizationState[event.target.value] = ! oldCustomizationState[event.target.value];\n        for (const [key, value] of Object.entries(oldCustomizationState)) {\n            if (key != event.target.value)\n                newCustomizationState[key] = value;\n        }\n        \n        setCustomization(newCustomizationState);\n    };\n    \n    const ifChecked = (props) => {\n        return oldCustomizationState[props];\n    } \n    \n    //ensures default value of radiogroup is accurate and responsive\n    const checkDefaultValue = () => {\n        let value = \"\";\n        if (oldCustomizationState.mealplan) value += \"mealplan_only\";\n        if (oldCustomizationState.favorites) value += \"favorites_only\";\n        if (oldCustomizationState.rare_finds) value += \"rare_finds_only\";\n        if (oldCustomizationState.downhill) value += \"downhill_only\";\n        if (oldCustomizationState.vegetarian) value += \"vegetarian_only\";\n        return value;\n    }\n    \n    //TODO: ensure default is reflected by changes in full customization\n    //TODO: switch out the bottom 6 form control labels with the top 6 form control label format\n    \n    return (\n        <Box className=\"Search\">\n            <Grid container>\n                <Grid item xs={12}>\n                    <h3>Recommended Defaults:</h3>\n                    <RadioGroup defaultValue={checkDefaultValue} onChange={handleDefaultChange}>\n                        <FormControlLabel value=\"mealplan_only\" control={<Radio />} label=\"Mealplan only\" />\n                        <FormControlLabel value=\"favorites_only\" control={<Radio />} label=\"Favorites only\" />\n                        <FormControlLabel value=\"rare_finds_only\" control={<Radio />} label=\"Rare finds only\" />\n                        <FormControlLabel value=\"downhill_only\" control={<Radio />} label=\"Downhill only\" />\n                        <FormControlLabel value=\"vegetarian_only\" control={<Radio />} label=\"Vegetarian only\" />\n                    </RadioGroup>\n                </Grid>\n                \n                <Grid item xs={12}>\n                    <h3>Full Customization:</h3>\n                </Grid>\n                <Grid item xs={6}>\n                    <FormGroup onChange={handleCustomChange}>\n                        <FormControlLabel \n                            control={<Switch value=\"downhill\" checked={ifChecked(\"downhill\")} />  }\n                            label=\"Downhill\" \n                        />\n                        <FormControlLabel \n                            control={<Switch value=\"mealplan\" checked={ifChecked(\"mealplan\")} />  }\n                            label=\"Mealplan\" \n                        />\n                        <FormControlLabel \n                            control={<Switch value=\"favorites\" checked={ifChecked(\"favorites\")} />  }\n                            label=\"Favorites\" \n                        />\n                    </FormGroup>\n                </Grid>\n                <Grid item xs={6}>\n                    <FormGroup onChange={handleCustomChange}>\n                        <FormControlLabel \n                            control={<Switch value=\"uphill\" checked={ifChecked(\"uphill\")} />  }\n                            label=\"Uphill\" \n                        />\n                        <FormControlLabel \n                            control={<Switch value=\"jumbocash\" checked={ifChecked(\"jumbocash\")} />  }\n                            label=\"Jumbocash\" \n                        />\n                        <FormControlLabel \n                            control={<Switch value=\"rare_finds\" checked={ifChecked(\"rare_finds\")} />  }\n                            label=\"Rare finds\" \n                        />\n                    </FormGroup>\n                </Grid>\n                \n                \n                <Grid item xs={12}>\n                    <h3>Sort by Allergen:</h3>\n                </Grid>\n                <Grid item xs={6}>\n                    <FormGroup onChange={handleCustomChange}>\n                        <FormControlLabel value=\"vegetarian\" control={<Switch />} label=\"Vegetarian\" />\n                        <FormControlLabel value=\"gluten_free\" control={<Switch />} label=\"Gluten free\" />\n                        <FormControlLabel value=\"nut_free\" control={<Switch />} label=\"Nut free\" />\n                    </FormGroup>\n                </Grid>\n                <Grid item xs={6}>\n                    <FormGroup onChange={handleCustomChange}>\n                        <FormControlLabel value=\"vegan\" control={<Switch />} label=\"Vegan\" />\n                        <FormControlLabel value=\"milk_free\" control={<Switch />} label=\"Milk free\" />\n                        <FormControlLabel value=\"allergen_free\" control={<Switch />} label=\"Allergen free\" />\n                    </FormGroup>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default Search;","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/BottomNavBar.js",["55"],"//BottomNavBar\n//Modified from MUI example\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport \"./BottomNavBar.css\";\n\nimport { useSetRecoilState, useRecoilValue } from \"recoil\";\nimport { appState, getAppState } from \"../state.js\"\n\nconst BottomNavBar = () => {\n  const [value, setValue] = React.useState(0);\n  const setAppState = useSetRecoilState(appState);\n  const currAppState = useRecoilValue(getAppState);\n\n  const handleChange = (event, newValue) => {\n    console.log(\"handling bottom nav\");\n    setAppState({ menu: false });\n    console.log(currAppState);\n    setValue(newValue)\n  };\n  \n  //NB: doesn't work! registers previos value of nav bar\n  const handleClick = () => {\n      if (value == 1) {\n          console.log(\"clicked key!\");\n      }\n  }\n  \n  // \\/ didn't work, whole nav bar doesn't update onChange\n  // React.useEffect(() => {\n  //     console.log(\"bruh\");\n  //     return () => {\n  //         console.log(\"hello\");\n  //     };\n  // }, []);\n\n  return (\n    <Box className=\"BottomNavBar\" sx={{ width: '100%'}}>\n      <hr className=\"TopBorder\"/>\n      <Tabs id=\"bottom\" value={value} onChange={handleChange} onClick={handleClick} sx={{'& .MuiTabs-flexContainer': {justifyContent: 'space-evenly', }, }}>\n        <Tab label=\"Change Search Parameters\" sx={{height: '8vh', fontSize: '15px', color: 'rgba(0, 0, 0, 1)'}}/>\n        <Tab label=\"Key\" sx={{height: '8vh', fontSize: '15px', color: 'rgba(0, 0, 0, 1)'}}/>\n      </Tabs>\n    </Box>\n  );\n}\n\nexport default BottomNavBar;\n","/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/Key.js",[],"/Users/lucasmaley/Desktop/personal_projects/Tufts Dining App/pern-dining/client/src/components/KeyItem.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":9,"column":10,"nodeType":"62","messageId":"63","endLine":9,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":46,"column":8,"nodeType":"66","endLine":46,"endColumn":10,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":25,"column":19,"nodeType":"70","messageId":"71","endLine":25,"endColumn":21},{"ruleId":"60","severity":1,"message":"72","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"73","line":1,"column":27,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"74","line":1,"column":38,"nodeType":"62","messageId":"63","endLine":1,"endColumn":46},{"ruleId":"60","severity":1,"message":"75","line":8,"column":8,"nodeType":"62","messageId":"63","endLine":8,"endColumn":19},{"ruleId":"60","severity":1,"message":"76","line":24,"column":26,"nodeType":"62","messageId":"63","endLine":24,"endColumn":31},{"ruleId":"68","severity":1,"message":"69","line":25,"column":21,"nodeType":"70","messageId":"71","endLine":25,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":35,"column":21,"nodeType":"70","messageId":"71","endLine":35,"endColumn":23},{"ruleId":"68","severity":1,"message":"77","line":27,"column":17,"nodeType":"70","messageId":"71","endLine":27,"endColumn":19},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'customizationState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDishes'. Either include it or remove the dependency array.","ArrayExpression",["80"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Fragment' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'FormControl' is defined but never used.","'value' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [getDishes]",{"range":"83","text":"84"},[1288,1290],"[getDishes]"]